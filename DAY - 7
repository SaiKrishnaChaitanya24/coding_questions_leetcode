question - 1
https://leetcode.com/problems/power-of-three/
code is as follows-
class Solution:
    def isPowerOfThree(self, n: int) -> bool:
        v = 1
        i = 1
        if n < 1:
            return False
        elif n == 1:
            return True
        else:
            while v <= n:
                v = 3 ** i 
                if v == n:
                    return True
                    break
                else:
                    i+=1
        return False
            
question 2 -
https://leetcode.com/problems/counting-bits/
code is as follows -
class Solution:
    def countBits(self, n: int) -> List[int]:
        l = []
        k = []
        p =[]
        # k.append(0)
        # count = 0
        for i in range(0,n+1):
            z = str(bin(i))
            t = z[2:]
            p.append(t)
        for l in p:
             z = l.count('1')
             k.append(z)
        return k 
